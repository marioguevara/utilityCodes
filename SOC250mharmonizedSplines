
workgroup -g spac
screen -a
cd ..
cd /home/work/spac/mguevara/SOIL_ORGANIC_CARBON
qlogin -l exclusive=1 -pe mpi 20


vpkg_require r/3.2.5
r-search GSIF
vpkg_require r-gdal/20160509
vpkg_require r-rethink
####vpkg_require r-rethink

R -q --no-save

rm(list=ls())

###

separar1 <- function(dataframe, seed=NULL,trainsize=0.50) {#from 0-1
  if (!is.null(seed)) set.seed(seed)
  index <- 1:nrow(dataframe)
  trainindex <- sample(index, round(trainsize*nrow(dataframe)))
  trainset <- dataframe[trainindex, ]
  testset <- dataframe[-trainindex, ]
  list(trainset=trainset,testset=testset)
  }

###benchmark tool

CronometroON<- function(){
      tic<-proc.time()[3]
      assign(".tic", tic, envir=baseenv())
      invisible(tic)
      }
CronometroOFF<- function(){
      tic <- get(".tic", envir=baseenv())
      toc<-proc.time()[3]-tic
      hrs<-as.integer(toc/3600)
      minu<- as.integer(((toc/3600)-hrs)*60)
      seg<- ((((((toc/3600)-hrs)*60)))-minu)*60
      time<-paste(as.character(hrs),"hrs ",as.character(minu),"min ",as.character(round(seg,digit=2)),"seg",sep="")
      return(time)
      }
CronometroON()

###libraries

#library(rethinking)
library(rasterVis)
library(dichromat)
library(randomForest)
library(kknn)
library(raster)
library(GSIF)
library(ranger)

###lm r2
library(bootstrap)
k_fold_rsq <- function(lmfit, ngroup=10) {
    # assumes library(bootstrap)
    # adapted from http://www.statmethods.net/stats/regression.html
    mydata <- lmfit$model
    outcome <- names(lmfit$model)[1]
    predictors <- names(lmfit$model)[-1]

    theta.fit <- function(x,y){lsfit(x,y)}
    theta.predict <- function(fit,x){cbind(1,x)%*%fit$coef} 
    X <- as.matrix(mydata[predictors])
    y <- as.matrix(mydata[outcome]) 

    results <- crossval(X,y,theta.fit,theta.predict,ngroup=ngroup)
    raw_rsq <- cor(y, lmfit$fitted.values)**2 # raw R2 
    cv_rsq <- cor(y,results$cv.fit)**2 # cross-validated R2

    c(raw_rsq=raw_rsq, cv_rsq=cv_rsq)
}
#

library(GSIF)
library(Metrics)
library(sp)
library(rpart)
library(nlme)
library(gstat)
library(randomForest)
library(quantregForest)
library(xgboost)
library(caret)
library(scales)
library(AICcmodavg)
library(rasterVis)
library(readxl)
library(raster)
library(rgdal)
library(automap)
library(rethinking)

ex=readRDS("/home/work/spac/mguevara/SOIL_ORGANIC_CARBON/back/covs/harmonizedDAT.rds")
ex=na.omit(ex)
ex[ex$soc>=16.5,]=NA
ex=na.omit(ex)
ex[ex$x==400,]=NA
ex=na.omit(ex)
ex[ex$y==400,]=NA
ex=na.omit(ex)
coordinates(ex)=~x+y

proj4string(ex)=CRS('+proj=longlat +datum=WGS84 +no_defs')
ex <- spTransform(ex, CRS("+proj=aeqd +lat_0=52 +lon_0=-97.5 +x_0=8264722.17686 +y_0=4867518.35323 +datum=WGS84
+units=m +no_defs +ellps=WGS84 +towgs84=0,0,0"))

dir=list.dirs( "/home/work/spac/mguevara/TOM/covs")
dir=dir[2:length(dir)]
time=character() 
tile=character(0)

d=substr(dir[1], 35,61)
output <- "/home/work/spac/mguevara/SOIL_ORGANIC_CARBON/gsif/"
output <- paste(output, d, sep='')
output
dir.create(file.path(output), showWarnings = FALSE)
m <- readRDS(paste(dir[1], '/',d, '.rds', sep=''))
m2=data.frame(m[1:1,], soc=c('1'))
m2=m2[-1,]



for (x in 1:length(dir)){
d=substr(dir[x], 35,61)
output <- "/home/work/spac/mguevara/SOIL_ORGANIC_CARBON/gsif/"
output <- paste(output, d, sep='')
output
dir.create(file.path(output), showWarnings = FALSE)
m <- readRDS(paste(dir[x], '/',d, '.rds', sep=''))
ov=over(ex, m)
ov$x=ex$x
ov$y=ex$y
ov$country=ex$country
ov$soc=ex$soc
ov=ov[complete.cases(ov),]
ov$TSDMOD3=NULL
ov$TSNMOD3=NULL
m2=rbind(m2, ov)
}

m2$soc[m2$soc==0]=NA
m2=na.omit(m2)
m2$soc=log(m2$soc)

library(dplyr)
library(reshape2)

d_cor <- as.matrix(cor(m2[-164]))
d_cor_melt <- arrange(melt(d_cor), -abs(value))
d_cor_melt[d_cor_melt$Var2=='soc',]
#d_cor_melt[d_cor_melt$Var1=='soc',]

train=data.frame(soc=m2$soc, T05MOD3=m2$T05MOD3, TMDMOD3=m2$TMDMOD3, T10MOD3=m2$T10MOD3,T06MOD3=m2$T06MOD3, M02MOD4=m2$M02MOD4, M01MOD4=m2$M01MOD4, T04MOD3=m2$T04MOD3)

model <- quantregForest(y=train$soc, x=train[,2:8], ntree=600, nthreads=19) 

dir=list.dirs( "/home/work/spac/mguevara/TOM/covs")
dir=dir[2:length(dir)]

for (x in 1:length(dir)){
d=substr(dir[x], 35,61)
#output <- "/home/work/spac/mguevara/SOIL_ORGANIC_CARBON/gsif/"
#output <- paste(output, d, sep='')
#output
#dir.create(file.path(output), showWarnings = FALSE)
m <- readRDS(paste(dir[x], '/',d, '.rds', sep=''))
s=stack(m[c('T05MOD3','TMDMOD3','T10MOD3','T06MOD3','M02MOD4','M01MOD4','T04MOD3')])
beginCluster()
predMean<- clusterR(s, predict, args=list(model=model,what=mean))
predSd<- clusterR(s, predict, args=list(model=model,what=sd))
s=stack(predMean, predSd)
writeRaster(s, file=paste('SOCqrf_1Median_2SD_',d,'.tif', sep=''), overwrite=FALSE) #specify the name and change when repeating this step with model residuals (e.g. preMeanRes)
endCluster()
}



#pred <- predict(lm1, interval="confidence",newdata=m)# 
#pred <- predict(lm1, m)
#pred=data.table(x=m$x, y=m$y, z=pred)
#pred=data.table(x=m$x, y=m$y, data.frame(pred))
#map=rbind(map, pred)
#map=na.omit(map)
}	




